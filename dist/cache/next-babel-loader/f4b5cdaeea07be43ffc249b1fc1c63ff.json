{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/songxinxin/workspace/demo/with-typescript-eslint-jest/src/pages/todo.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, asyncAddToDo } from '../redux/actions';\nconst {\n  Item\n} = _List;\n\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nconst mapDispatchToProps = {\n  addTodo,\n  asyncAddToDo\n};\nlet Todo = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = (_temp = class Todo extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"changeTodo\", el => {\n      this.setState({\n        todo: el.target.value\n      });\n    });\n\n    _defineProperty(this, \"childMethod\", () => {\n      return this.state.todo;\n    });\n\n    this.state = {\n      todo: ''\n    };\n  }\n\n  render() {\n    const {\n      todos,\n      addTodo,\n      asyncAddToDo\n    } = this.props;\n    const {\n      todo\n    } = this.state;\n    const liList = todos.map((todo, index) => __jsx(Item, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, todo));\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(_Input, {\n      type: \"text\",\n      defaultValue: todo,\n      onChange: this.changeTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), __jsx(_Button, {\n      onClick: addTodo.bind(this, todo),\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"\\u6DFB\\u52A0\"), __jsx(_Button, {\n      onClick: asyncAddToDo.bind(this, todo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"\\u6DFB\\u52A0\")), __jsx(_List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, liList));\n  }\n\n}, _temp)) || _class);\nexport default Todo;","map":{"version":3,"sources":["/Users/songxinxin/workspace/demo/with-typescript-eslint-jest/src/pages/todo.tsx"],"names":["React","PureComponent","connect","addTodo","asyncAddToDo","Item","mapStateToProps","state","todos","mapDispatchToProps","Todo","constructor","props","el","setState","todo","target","value","render","liList","map","index","changeTodo","bind"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,kBAAtC;AAEA,MAAM;AAAEC,EAAAA;AAAF,SAAN;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAAEC,EAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,CAAZ,CAAxB;;AACA,MAAMC,kBAAkB,GAAG;AAAEN,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA3B;IAGMM,I,WADLR,OAAO,CAACI,eAAD,EAAkBG,kBAAlB,C,yBAAR,MACMC,IADN,SACmBT,aADnB,CAC8D;AAC1DU,EAAAA,WAAW,CAACC,KAAD,EAAmB;AAC1B,UAAMA,KAAN;;AAD0B,wCAOhBC,EAAD,IAAQ;AACjB,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,EAAE,CAACG,MAAH,CAAUC;AADN,OAAd;AAGH,KAX6B;;AAAA,yCAchB,MAAM;AAChB,aAAO,KAAKV,KAAL,CAAWQ,IAAlB;AACH,KAhB6B;;AAE1B,SAAKR,KAAL,GAAa;AACTQ,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAaDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,KAAF;AAASL,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAAmC,KAAKQ,KAA9C;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,KAAKR,KAAtB;AACA,UAAMY,MAAM,GAAGX,KAAK,CAACY,GAAN,CAAU,CAACL,IAAD,EAAOM,KAAP,KACrB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBN,IAAnB,CADW,CAAf;AAGA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,YAAY,EAAEA,IAFlB;AAGI,MAAA,QAAQ,EAAE,KAAKO,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAQ,MAAA,OAAO,EAAEnB,OAAO,CAACoB,IAAR,CAAa,IAAb,EAAmBR,IAAnB,CAAjB;AAA2C,MAAA,IAAI,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,EASI;AAAQ,MAAA,OAAO,EAAEX,YAAY,CAACmB,IAAb,CAAkB,IAAlB,EAAwBR,IAAxB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CADJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOI,MAAP,CAdJ,CADJ;AAkBH;;AA3CyD,C;AA8C9D,eAAeT,IAAf","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Button, Input, List } from 'antd'\nimport { connect } from 'react-redux'\nimport { addTodo, asyncAddToDo } from '../redux/actions'\n\nconst { Item } = List\n\ninterface TodoProps {\n    todos?: Array<string>\n    addTodo?: (todo: string) => void\n    asyncAddToDo?: (todo: string) => void\n}\nconst mapStateToProps = (state) => ({ todos: state.todos })\nconst mapDispatchToProps = { addTodo, asyncAddToDo }\n\n@connect(mapStateToProps, mapDispatchToProps)\nclass Todo extends PureComponent<TodoProps, { todo: string }> {\n    constructor(props: TodoProps) {\n        super(props)\n        this.state = {\n            todo: '',\n        }\n    }\n\n    changeTodo = (el) => {\n        this.setState({\n            todo: el.target.value,\n        })\n    }\n\n    // 1.2这是给父组件调用的函数\n    childMethod = () => {\n        return this.state.todo\n    }\n\n    render() {\n        const { todos, addTodo, asyncAddToDo } = this.props\n        const { todo } = this.state\n        const liList = todos.map((todo, index) => (\n            <Item key={index}>{todo}</Item>\n        ))\n        return (\n            <div>\n                <div>\n                    <Input\n                        type=\"text\"\n                        defaultValue={todo}\n                        onChange={this.changeTodo}\n                    />\n                    <Button onClick={addTodo.bind(this, todo)} type=\"primary\">\n                        添加\n                    </Button>\n                    <Button onClick={asyncAddToDo.bind(this, todo)}>\n                        添加\n                    </Button>\n                </div>\n                <List>{liList}</List>\n            </div>\n        )\n    }\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}