{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/songxinxin/workspace/demo/with-typescript-eslint-jest/src/pages/todo.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, asyncAddToDo } from '../redux/actions';\nvar Item = _List.Item;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = {\n  addTodo: addTodo,\n  asyncAddToDo: asyncAddToDo\n};\nvar Todo = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = (_temp = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Todo, _PureComponent);\n\n  var _super = _createSuper(Todo);\n\n  function Todo(props) {\n    var _this;\n\n    _classCallCheck(this, Todo);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"changeTodo\", function (el) {\n      _this.setState({\n        todo: el.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"childMethod\", function () {\n      return _this.state.todo;\n    });\n\n    _this.state = {\n      todo: ''\n    };\n    return _this;\n  }\n\n  _createClass(Todo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          todos = _this$props.todos,\n          addTodo = _this$props.addTodo,\n          asyncAddToDo = _this$props.asyncAddToDo;\n      var todo = this.state.todo;\n      var liList = todos.map(function (todo, index) {\n        return __jsx(Item, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }, todo);\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, __jsx(_Input, {\n        type: \"text\",\n        defaultValue: todo,\n        onChange: this.changeTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }), __jsx(_Button, {\n        onClick: addTodo.bind(this, todo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \"\\u6DFB\\u52A0\"), __jsx(_Button, {\n        onClick: asyncAddToDo.bind(this, todo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"\\u6DFB\\u52A0\")), __jsx(_List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, liList));\n    }\n  }]);\n\n  return Todo;\n}(PureComponent), _temp)) || _class);\nexport default Todo;","map":{"version":3,"sources":["/Users/songxinxin/workspace/demo/with-typescript-eslint-jest/src/pages/todo.tsx"],"names":["React","PureComponent","connect","addTodo","asyncAddToDo","Item","mapStateToProps","state","todos","mapDispatchToProps","Todo","props","el","setState","todo","target","value","liList","map","index","changeTodo","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,kBAAtC;IAEQC,I,SAAAA,I;;AAOR,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAZ;AAAA,CAAxB;;AACA,IAAMC,kBAAkB,GAAG;AAAEN,EAAAA,OAAO,EAAPA,OAAF;AAAWC,EAAAA,YAAY,EAAZA;AAAX,CAA3B;IAGMM,I,WADLR,OAAO,CAACI,eAAD,EAAkBG,kBAAlB,C;;;;;AAEJ,gBAAYE,KAAZ,EAA8B;AAAA;;AAAA;;AAC1B,8BAAMA,KAAN;;AAD0B,iEAOjB,UAACC,EAAD,EAAQ;AACjB,YAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,EAAE,CAACG,MAAH,CAAUC;AADN,OAAd;AAGH,KAX6B;;AAAA,kEAchB,YAAM;AAChB,aAAO,MAAKT,KAAL,CAAWO,IAAlB;AACH,KAhB6B;;AAE1B,UAAKP,KAAL,GAAa;AACTO,MAAAA,IAAI,EAAE;AADG,KAAb;AAF0B;AAK7B;;;;6BAaQ;AAAA;;AAAA,wBACoC,KAAKH,KADzC;AAAA,UACGH,KADH,eACGA,KADH;AAAA,UACUL,OADV,eACUA,OADV;AAAA,UACmBC,YADnB,eACmBA,YADnB;AAAA,UAEGU,IAFH,GAEY,KAAKP,KAFjB,CAEGO,IAFH;AAGL,UAAMG,MAAM,GAAGT,KAAK,CAACU,GAAN,CAAU,UAACJ,IAAD,EAAOK,KAAP;AAAA,eACrB,MAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBL,IAAnB,CADqB;AAAA,OAAV,CAAf;AAGA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,YAAY,EAAEA,IAFlB;AAGI,QAAA,QAAQ,EAAE,KAAKM,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI;AAAQ,QAAA,OAAO,EAAEjB,OAAO,CAACkB,IAAR,CAAa,IAAb,EAAmBP,IAAnB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,EAOI;AAAQ,QAAA,OAAO,EAAEV,YAAY,CAACiB,IAAb,CAAkB,IAAlB,EAAwBP,IAAxB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOG,MAAP,CAZJ,CADJ;AAgBH;;;;EAzCchB,a;AA4CnB,eAAeS,IAAf","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Button, Input, List } from 'antd'\nimport { connect } from 'react-redux'\nimport { addTodo, asyncAddToDo } from '../redux/actions'\n\nconst { Item } = List\n\ninterface TodoProps {\n    todos?: Array<string>\n    addTodo?: (todo: string) => void\n    asyncAddToDo?: (todo: string) => void\n}\nconst mapStateToProps = (state) => ({ todos: state.todos })\nconst mapDispatchToProps = { addTodo, asyncAddToDo }\n\n@connect(mapStateToProps, mapDispatchToProps)\nclass Todo extends PureComponent<TodoProps, { todo: string }> {\n    constructor(props: TodoProps) {\n        super(props)\n        this.state = {\n            todo: '',\n        }\n    }\n\n    changeTodo = (el) => {\n        this.setState({\n            todo: el.target.value,\n        })\n    }\n\n    // 1.2这是给父组件调用的函数\n    childMethod = () => {\n        return this.state.todo\n    }\n\n    render() {\n        const { todos, addTodo, asyncAddToDo } = this.props\n        const { todo } = this.state\n        const liList = todos.map((todo, index) => (\n            <Item key={index}>{todo}</Item>\n        ))\n        return (\n            <div>\n                <div>\n                    <Input\n                        type=\"text\"\n                        defaultValue={todo}\n                        onChange={this.changeTodo}\n                    />\n                    <Button onClick={addTodo.bind(this, todo)}>添加</Button>\n                    <Button onClick={asyncAddToDo.bind(this, todo)}>\n                        添加\n                    </Button>\n                </div>\n                <List>{liList}</List>\n            </div>\n        )\n    }\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}