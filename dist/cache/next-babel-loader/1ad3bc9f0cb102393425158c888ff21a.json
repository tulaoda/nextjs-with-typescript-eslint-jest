{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport actionTypes from './action-types';\nexport const exampleInitialState = {\n  todos: ['hello next-redux']\n}; // REDUCERS(reducer)\n\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      // eslint-disable-next-line no-case-declarations\n      const todos = [...state.todos];\n      todos.push(action.todo);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/songxinxin/workspace/demo/with-typescript-eslint-jest/src/redux/reducers.ts"],"names":["actionTypes","exampleInitialState","todos","reducer","state","action","type","ADD_TODO","push","todo"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,OAAO,MAAMC,mBAAmB,GAAG;AAC/BC,EAAAA,KAAK,EAAE,CAAC,kBAAD;AADwB,CAA5B,C,CAIP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,mBAAT,EAA8BI,MAA9B,KAAyC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,QAAjB;AACI;AACA,YAAML,KAAK,GAAG,CAAC,GAAGE,KAAK,CAACF,KAAV,CAAd;AACAA,MAAAA,KAAK,CAACM,IAAN,CAAWH,MAAM,CAACI,IAAlB;AACA,6CAAYL,KAAZ;AAAmBF,QAAAA;AAAnB;;AACJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVM","sourcesContent":["import actionTypes from './action-types'\n\nexport const exampleInitialState = {\n    todos: ['hello next-redux'],\n}\n\n// REDUCERS(reducer)\nexport const reducer = (state = exampleInitialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_TODO:\n            // eslint-disable-next-line no-case-declarations\n            const todos = [...state.todos]\n            todos.push(action.todo)\n            return { ...state, todos }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}