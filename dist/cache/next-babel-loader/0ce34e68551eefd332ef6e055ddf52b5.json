{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport Immutable from 'immutable';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { reducer, exampleInitialState } from './reducers'; // import createSagaMiddleware from 'redux-saga';//选这个 或者上面的那个redux-thunk  这个需要安装yarn add next-redux-saga redux-saga --save\n// initialState\n// const reducers = combineReducers({\n//   reducer\n// });\n// state日志\n\nvar logger = createLogger({\n  stateTransformer: function stateTransformer(state) {\n    return Immutable.fromJS(state).toJS();\n  }\n}); // store\n\nexport function initializeStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  return createStore(reducer, initialState, false ? applyMiddleware(thunk) : applyMiddleware(thunk, logger));\n}","map":{"version":3,"sources":["/Users/songxinxin/workspace/demo/with-typescript-eslint-jest/src/redux/store.ts"],"names":["createStore","applyMiddleware","Immutable","createLogger","thunk","reducer","exampleInitialState","logger","stateTransformer","state","fromJS","toJS","initializeStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,EAAkBC,mBAAlB,QAA6C,YAA7C,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;;AACA,IAAMC,MAAM,GAAGJ,YAAY,CAAC;AACxBK,EAAAA,gBAAgB,EAAE,0BAACC,KAAD;AAAA,WAAWP,SAAS,CAACQ,MAAV,CAAiBD,KAAjB,EAAwBE,IAAxB,EAAX;AAAA;AADM,CAAD,CAA3B,C,CAIA;;AACA,OAAO,SAASC,eAAT,GAA6D;AAAA,MAApCC,YAAoC,uEAArBP,mBAAqB;AAChE,SAAON,WAAW,CACdK,OADc,EAEdQ,YAFc,EAGd,QACMZ,eAAe,CAACG,KAAD,CADrB,GAEMH,eAAe,CAACG,KAAD,EAAQG,MAAR,CALP,CAAlB;AAOH","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport Immutable from 'immutable'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport { reducer, exampleInitialState } from './reducers'\n\n// import createSagaMiddleware from 'redux-saga';//选这个 或者上面的那个redux-thunk  这个需要安装yarn add next-redux-saga redux-saga --save\n// initialState\n\n// const reducers = combineReducers({\n//   reducer\n// });\n\n// state日志\nconst logger = createLogger({\n    stateTransformer: (state) => Immutable.fromJS(state).toJS(),\n})\n\n// store\nexport function initializeStore(initialState = exampleInitialState) {\n    return createStore(\n        reducer,\n        initialState,\n        process.env.NODE_ENV === 'production'\n            ? applyMiddleware(thunk)\n            : applyMiddleware(thunk, logger)\n    )\n}\n"]},"metadata":{},"sourceType":"module"}